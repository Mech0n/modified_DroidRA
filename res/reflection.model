class java.lang.Class {Class declaringClass_class;String name_class;query <java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.String getSimpleName()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class[] getDeclaredClasses()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isLocalClass()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isAnnotationPresent(java.lang.Class)> {-1: type java.lang.Class;}query <java.lang.Class: boolean isSynthetic()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class getSuperclass()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Object[] getEnumConstants()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.ClassLoader getClassLoader()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class getDeclaringClass()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> {-1: type java.lang.Class;}query <java.lang.Class: void notifyAll()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isArray()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isInterface()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isPrimitive()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class getEnclosingClass()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class getComponentType()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class getClass()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Package getPackage()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isAssignableFrom(java.lang.Class)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.String getName()> {-1: type java.lang.Class;}query <java.lang.Class: int hashCode()> {-1: type java.lang.Class;}query <java.lang.Class: int getModifiers()> {-1: type java.lang.Class;}query <java.lang.Class: void notify()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Object newInstance()> {-1: type java.lang.Class;}mod gen <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> {0: replace name_class;}query <java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class asSubclass(java.lang.Class)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class[] getClasses()> {-1: type java.lang.Class;}query <java.lang.Class: void wait()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isAnonymousClass()> {-1: type java.lang.Class;}query <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.String toString()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Method[] getMethods()> {-1: type java.lang.Class;}query <java.lang.Class: java.net.URL getResource(java.lang.String)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.String getCanonicalName()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> {-1: type java.lang.Class;}mod gen <java.lang.Class: java.lang.Class forName(java.lang.String)> {0: replace name_class;}query <java.lang.Class: boolean desiredAssertionStatus()> {-1: type java.lang.Class;}query <java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isInstance(java.lang.Object)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Method getEnclosingMethod()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()> {-1: type java.lang.Class;}query <java.lang.Class: boolean isAnnotation()> {-1: type java.lang.Class;}query <java.lang.Class: void wait(long,int)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> {-1: type java.lang.Class;}query <java.lang.Class: void wait(long)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Object cast(java.lang.Object)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> {-1: type java.lang.Class;}query <java.lang.Class: boolean isEnum()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> {-1: type java.lang.Class;}query <java.lang.Class: boolean isMemberClass()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Object[] getSigners()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> {-1: type java.lang.Class;}query <java.lang.Class: boolean equals(java.lang.Object)> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Field[] getFields()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.Class[] getInterfaces()> {-1: type java.lang.Class;}query <java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()> {-1: type java.lang.Class;}}
class java.lang.reflect.Constructor {Class declaringClass_constructor;String name_constructor;mod gen <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> {-1: replace declaringClass_constructor;0: replace name_constructor;}mod gen <java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> {-1: replace declaringClass_constructor;0: replace name_constructor;}query <java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void notifyAll()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void wait(long,int)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: boolean equals(java.lang.Object)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: boolean isAccessible()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: int hashCode()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: boolean isAnnotationPresent(java.lang.Class)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void setAccessible(boolean)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.String toString()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.String toGenericString()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void notify()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getAnnotations()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: boolean isVarArgs()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.String getName()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: boolean isSynthetic()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void wait()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void wait(long)> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: java.lang.Class getClass()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: int getModifiers()> {-1: type java.lang.reflect.Constructor;}query <java.lang.reflect.Constructor: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)> {-1: type java.lang.reflect.Constructor;}}
class java.lang.reflect.Method {Class declaringClass_method;String name_method;mod gen <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> {-1: replace declaringClass_method;0: replace name_method;}mod gen <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> {-1: replace declaringClass_method;0: replace name_method;}query <java.lang.reflect.Method: java.lang.annotation.Annotation[] getAnnotations()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean equals(java.lang.Object)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.String toGenericString()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void wait(long)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Class getClass()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.String getName()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean isBridge()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean isSynthetic()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean isAccessible()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.String toString()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Class getDeclaringClass()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void wait(long,int)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: boolean isVarArgs()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void notify()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void notifyAll()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: int getModifiers()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Class getReturnType()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void wait()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: void setAccessible(boolean)> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: java.lang.Object getDefaultValue()> {-1: type java.lang.reflect.Method;}query <java.lang.reflect.Method: int hashCode()> {-1: type java.lang.reflect.Method;}}
class java.lang.reflect.Field {Class declaringClass_field;String name_field;mod gen <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> {-1: replace declaringClass_field;0: replace name_field;}mod gen <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> {-1: replace declaringClass_field;0: replace name_field;}query <java.lang.reflect.Field: java.lang.annotation.Annotation[] getAnnotations()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setShort(java.lang.Object,short)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: double getDouble(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean isAccessible()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.Class getClass()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: short getShort(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean getBoolean(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.Class getType()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.String getName()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.Class getDeclaringClass()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setFloat(java.lang.Object,float)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: float getFloat(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setByte(java.lang.Object,byte)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: byte getByte(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean isEnumConstant()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setLong(java.lang.Object,long)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: int getInt(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: int hashCode()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: char getChar(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean isSynthetic()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setAccessible(boolean)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: long getLong(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void wait(long)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void wait(long,int)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setDouble(java.lang.Object,double)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.String toGenericString()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setInt(java.lang.Object,int)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setChar(java.lang.Object,char)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: boolean equals(java.lang.Object)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void notify()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.String toString()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void notifyAll()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: int getModifiers()> {-1: type java.lang.reflect.Field;}query <java.lang.reflect.Field: void wait()> {-1: type java.lang.reflect.Field;}}
class dummy {query <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> {0: type String;}query <java.lang.Class: java.net.URL getResource(java.lang.String)> {0: type String;}query <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> {0: type String;}query <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> {0: type String;}query <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> {0: type String;}query <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> {0: type String;}query <java.lang.Class: java.lang.Class forName(java.lang.String)> {0: type String;}query <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> {0: type String;}}